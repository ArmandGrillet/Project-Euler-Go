/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package main

import "fmt"

const (
	max = 4000000
)

func main() {
	terms := [2]int{1, 2}
	evenSum := 2
	var oldSecondTerm int

	for terms[1] < max {
		oldSecondTerm = terms[1]
		terms[1] += terms[0]
		if terms[1]%2 == 0 {
			evenSum += terms[1]
		}
		terms[0] = oldSecondTerm
	}

	fmt.Println(evenSum)
}
